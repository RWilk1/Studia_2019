---
title: "Pakiet_dbplyr"
author: "RW"
date: "12 02 2020"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

**PAKIET dbplyr**
Pakiet służy do łączenia się z bazami danych

1. Instalowanie pakietu: "dbplyr" jest to część składowa pakietu TidyVerse, instalując TidyVerse dostajemy w pakiecie również dbplyr
```{r}
install.packages("dplyr")
installed.packages("dplyr") # Sprawdzanie czy danych pakiet został zainstalowany
library("dplyr")

# Sprawdzanie co zostało zainstalowane
search()
```

2. Wczytanie pakietu testowego ze zbiorem danych
```{r}
# install.packages("pscl")
library("pscl")
View(presidentialElections)
```


3. Funkcja SELECT - umożliwia pobieranie wybranych kolumn z ramki danych
```{r}
# Pobieranie kolumn year i demVotes (procent głosów oddanych na Demokratów)
# z ramki danych presidentialElections.
votes <- select(presidentialElections, year, demVote)
print(votes)

# Pobieranie kolumn na podstawie nazw (czyli podstawowej składni języka R).
votes <- presidentialElections[, c ("year", "demVote")]

# Pobieranie kolumn od state do year (czyli state, demVote i year).
select(presidentialElections, state:year)

# Pobieranie wszystkich kolumn oprócz south.
select(presidentialElections, -south)

```

4. Filtrowanie danych funkcja: filter()

```{r}
# Pobieranie wszystkich wierszy dotyczących wyborów z 2008 r.
votes_2008 <- filter(presidentialElections, year == 2008)
votes_2008
```

5. Filtrowanie z większą liczbą warunków
```{r}
votes_colorado_2008 <- filter(
  presidentialElections,
  year == 2008,
  state == "Colorado")

votes_colorado_2008
```

6. Funkcja: mutate() - dodaje dodatkowe kolumny do ramki danych
```{r}
# Dodawanie kolumny other_parties_vote z procentem głosów
# oddanych na inne partie.
# Dodawanie kolumny abs_vote_difference z wartością bezwzględną
# określającą różnicę między wartościami procentowymi.
# Warto zauważyć, że tych kolumn można użyć już w tworzącej je instrukcji.
presidentialElections <- mutate(
  presidentialElections,
  other_parties_vote = 100 - demVote, # Głosy na inne partie 
  abs_vote_difference = abs(demVote - other_parties_vote)
)

# umożliwia zmianę kolumn - rename()

```


7. Sortowane danych: Funkcja arrange()

```{r}
# Sortowanie wierszy malejąco według kolumny year, a następnie
# w ramach każdego roku według kolumny demVote.
presidentialElections <- arrange(presidentialElections, -year, demVote)

presidentialElections

```


8. Tworzenie podsumowań - Funkcja summariaze()
```{r}
# Obliczanie statystyk dla ramki danych presidentialElections.
average_votes <- summarize(
  presidentialElections,
  mean_dem_vote = mean(demVote),
  mean_other_parties = mean(other_parties_vote)
  )

average_votes
```

Funkcja summarize() zwraca ramkę danych ze zagregowanymi wartościami




