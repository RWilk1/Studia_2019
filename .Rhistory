dataset4 %>% summarise(max(funded_amnt2, na.rm = TRUE))
# Kwartyle
summary(dataset4$funded_amnt2)
percentyle <- na.omit(dataset4$funded_amnt2)
quantile(percentyle, c(.10, .30, .50, .70, .90))
dataset4 %>% count(dataset4$funded_amnt2)
summary(dataset4$funded_amnt2)
sum(is.na(dataset4$addr_state))
percentyle <- na.omit(dataset4$funded_amnt2)
quantile(percentyle, c(.10, .30, .50, .70, .90))
dataset4  <- mutate(dataset4, funded_amnt3 =
ifelse(funded_amnt2 >= 0 & funded_amnt2 <= 3000, "Od 0 do 3000",
ifelse(funded_amnt2 > 3000 & funded_amnt2 <= 6000, "Pow. 3000 do 6000",
ifelse(funded_amnt2 > 6000 & funded_amnt2 <= 9450, "Pow. 6000 do 9450",
ifelse(funded_amnt2 > 9450 & funded_amnt2 <= 13000, "Pow. 9450 do 13000",
ifelse(funded_amnt2 > 13000 & funded_amnt2 <= 20000, "Pow. 13000 do 20000", "Pow. 20000"))))))
dataset4 %>% count(dataset4$funded_amnt3)
dataset4  <- mutate(dataset4, funded_amnt3 =
ifelse(funded_amnt2 >= 0 & funded_amnt2 <= 3000, "1. Od 0 do 3000",
ifelse(funded_amnt2 > 3000 & funded_amnt2 <= 6000, "2. pow. 3000 do 6000",
ifelse(funded_amnt2 > 6000 & funded_amnt2 <= 9450, "3. pow. 6000 do 9450",
ifelse(funded_amnt2 > 9450 & funded_amnt2 <= 13000, "4. pow. 9450 do 13000",
ifelse(funded_amnt2 > 13000 & funded_amnt2 <= 20000, "5. pow. 13000 do 20000", "Pow. 20000"))))))
dataset4 %>% count(dataset4$funded_amnt3)
dataset4  <- mutate(dataset4, funded_amnt3 =
ifelse(funded_amnt2 >= 0 & funded_amnt2 <= 3000, "1. Od 0 do 3000",
ifelse(funded_amnt2 > 3000 & funded_amnt2 <= 6000, "2. pow. 3000 do 6000",
ifelse(funded_amnt2 > 6000 & funded_amnt2 <= 9450, "3. pow. 6000 do 9450",
ifelse(funded_amnt2 > 9450 & funded_amnt2 <= 13000, "4. pow. 9450 do 13000",
ifelse(funded_amnt2 > 13000 & funded_amnt2 <= 20000, "5. pow. 13000 do 20000", "6. pow. 20000"))))))
dataset4 %>% count(dataset4$funded_amnt3)
class(dataset4$home_ownership)
unique(dataset4$emp_length)
unique(dataset4$home_ownership)
dataset4 %>% count(dataset4$emp_length)
# Zmienne tekstowe (character)
class(dataset4$home_ownership)
# 5 unikatowych wartości
unique(dataset4$home_ownership)
dataset4 %>% count(dataset4$home_ownership)
# Redukowaie kategorii wartości w bardziej ogólne kategorie, na 5 kategorii
# Wartości NA przekształcane są na kategorię dominującą, czyli +10 lat
dataset4  <- mutate(dataset4, emp_length2 =
ifelse(emp_length == "< 1 year" | emp_length == "1 year", "1 rok lub mniej",
ifelse(emp_length == "2 years" | emp_length == "3 years", "Pow. 1 roku do 3 lat",
ifelse(emp_length == "4 years" | emp_length == "5 years", "Pow. 3 lat do 5 lat",
ifelse(emp_length == "6 years" | emp_length == "7 years"
| emp_length == "8 years" | emp_length == "9 years",
"Pow. 5 lat do 9 lat", "10 lat i więcej")))))
dataset4 %>% count(dataset4$emp_length2)
dataset4 %>% count(dataset4$home_ownership)
# Jest 0 wartości NA
sum(is.na(dataset4$addr_state))
class(dataset4$int_rate)
unique(dataset4$funded_amnt)
unique(dataset4$int_rate)
replace(dataset4$int_rate, "%", "values")
print(replace(dataset4$int_rate, "%", "values"))
print(replace(dataset4$int_rate, "%", "values"))
# Usuwanie znaku % z liczb
xxx <- replace(dataset4$int_rate, "%", "")
xxx
gsub("%", "", dataset4$int_rate)
```{r}
xxx <- gsub("%", "", dataset4$int_rate)
xxx
dataset4  <- mutate(dataset4, int_rate2 = gsub("%", "", dataset4$int_rate))
class(dataset4$funded_amnt2)
class(dataset4$funded_amnt2)
dataset4 %>% count(dataset4$funded_amnt2)
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("readxl")
search()
# Wyłączanie notacji naukowej
options(scipen = 999)
getwd()
dataset <- read_excel("LoanStats_DataSet.xlsx")
dataset <- as.tibble(dataset)
dataset
dataset
dataset
dataset
count(dataset)
count(dataset)
names(dataset)
View(dataset2)
class(dataset2$loan_status)
unique(dataset2$loan_status)
dataset2 %>% count(dataset2$loan_status)
dataset2 %>% count(dataset2$loan_status)
dataset3 <- dataset2
dataset3 <- mutate(dataset3, loan_status2 =
ifelse(loan_status == "Fully Paid" |
loan_status == "Does not meet the credit policy. Status:Fully Paid", "Paid",
ifelse(loan_status == "Charged Off" |
loan_status == "Does not meet the credit policy. Status:Charged Off" |
loan_status == "In Grace Period" |
loan_status == "Late (16-30 days)" |
loan_status == "Late (31-120 days)" |
loan_status == "Default", "Unrepaid", loan_status)))
dataset4 <- filter(dataset3,  !loan_status2 %in% "Current" & is.na(loan_status2) == FALSE) # wersja z NA
dataset4 %>% count(dataset4$loan_status2)
dataset4 %>% count(dataset4$loan_status2)
count(dataset4)
count(dataset4)
table(dataset4$loan_status2)
class(dataset4$annual_inc)
percentyle <- na.omit(dataset4$annual_inc)
quantile(percentyle, c(.10, .30, .50, .70, .90))
dataset4  <- mutate(dataset4, annual_inc2 =
ifelse(annual_inc >= 0 & annual_inc <= 30000, "Od 0 do 30000",
ifelse(annual_inc > 30000 & annual_inc <= 44340, "Od 30000 do 44340",
ifelse(annual_inc > 44340 & annual_inc <= 58629, "Od 44340 do 58629",
ifelse(annual_inc > 58629 & annual_inc <= 75324, "Od 58629 do 75324",
ifelse(annual_inc > 75324 & annual_inc <= 116004, "Od 75324 do 116004",
ifelse(annual_inc > 116004, "Większe niż 116004", annual_inc)))))))
dataset4 %>% count(dataset4$annual_inc2)
dataset <- read_excel("LoanStats_DataSet.xlsx")
dataset4 %>% count(dataset4$annual_inc2)
class(dataset4$application_type)
count(dataset4)
dataset4 %>% count(dataset4$application_type)
dataset4 %>% count(dataset4$application_type)
class(dataset4$delinq_2yrs)
dataset4  <- mutate(dataset4, delinq_2yrs2 = as.numeric(delinq_2yrs))
class(dataset4$delinq_2yrs2)
unique(dataset4$delinq_2yrs2)
dataset4 %>% count(dataset4$delinq_2yrs2)
dataset4  <- mutate(dataset4, delinq_2yrs3 =
ifelse(delinq_2yrs2 == 0, "Brak opóżnień",
ifelse(is.na(delinq_2yrs2), "Brak opóżnień", "Były opóźnienia")))
dataset4  <- dataset4 %>% mutate(delinq_2yrs3 = coalesce(delinq_2yrs3, "Brak opóżnień"))
dataset4 %>% count(dataset4$delinq_2yrs3)
dataset4  <- dataset4 %>% mutate(delinq_2yrs3 = coalesce(delinq_2yrs3, "Brak opóżnień"))
dataset4  <- dataset4 %>% mutate(delinq_2yrs3 = coalesce(delinq_2yrs3, "Brak opóżnień"))
dataset4 %>% count(dataset4$delinq_2yrs3)
dataset4 %>% count(dataset4$delinq_2yrs3)
summary(dataset4$funded_amnt2)
percentyle <- na.omit(dataset4$funded_amnt2)
# Przekształcanie danych z tekstowego na numeryczny
dataset4  <- mutate(dataset4, funded_amnt2 = as.numeric(funded_amnt))
dataset4  <- mutate(dataset4, funded_amnt2 = as.numeric(funded_amnt))
class(dataset4$funded_amnt2)
percentyle <- na.omit(dataset4$funded_amnt2)
quantile(percentyle, c(.10, .30, .50, .70, .90))
dataset4 %>% count(dataset4$funded_amnt2)
quantile(percentyle, c(.10, .30, .50, .70, .90))
dataset4$funded_amnt2
unique(dataset4$funded_amnt)
# Zmienna numeryczna ale przechowywana jako zmienna typu tekstowego (character)
class(dataset4$int_rate)
unique(dataset4$int_rate)
dataset4  <- mutate(dataset4, int_rate2 = gsub("%", "", dataset4$int_rate))
class(dataset4$funded_amnt2)
dataset4$funded_amnt2
dataset4$int_rate2
unique(dataset4$int_rate)
dataset4  <- mutate(dataset4, int_rate3 = as.numeric(int_rate2))
class(dataset4$funded_amnt2)
dataset4  <- mutate(dataset4, int_rate3 = as.numeric(int_rate2))
class(dataset4$int_rate3)
class(dataset4$int_rate3)
class(dataset4$int_rate2)
dataset4 %>% count(dataset4$funded_amnt2)
class(dataset4$int_rate3)
dataset4  <- mutate(dataset4, int_rate3 = as.numeric(int_rate2))
class(dataset4$int_rate3)
dataset4 %>% count(dataset4$int_rate3)
dataset4 %>% count(dataset4$int_rate3)
summary(dataset4$funded_amnt2)
dataset4 %>% summarise(sum(int_rate3, na.rm = TRUE))
# Średnia
dataset4 %>% summarise(mean(int_rate3, na.rm = TRUE))
# Mediana
dataset4 %>% summarise(median(int_rate3, na.rm = TRUE))
# Min
dataset4 %>% summarise(min(int_rate3, na.rm = TRUE))
# Max
dataset4 %>% summarise(max(int_rate3, na.rm = TRUE))
# Kwartyle
summary(dataset4$int_rate3)
# Ustalanie granic końc przedziałów
percentyle <- na.omit(dataset4$int_rate3)
quantile(percentyle, c(.10, .30, .50, .70, .90))
sum(is.na(dataset4$addr_state))
sum(is.na(dataset4$int_rate3))
dataset4 %>% count(dataset4$int_rate3)
quantile(percentyle, c(.10, .30, .50, .70, .90))
dataset4 %>% summarise(min(int_rate3, na.rm = TRUE))
dataset4  <- mutate(dataset4, int_rate4 =
ifelse(int_rate3 >= 0 & int_rate3 <= 7.29, "1. Od 5.42% do 7.29%",
ifelse(int_rate3 > 7.29 & int_rate3 <= 10.08, "2. pow. 7.29% do 10.08%",
ifelse(int_rate3 > 10.08 & int_rate3 <= 13.99, "3. pow. 10.08% do 13.99%",
ifelse(int_rate3 > 13.99 & int_rate3 <= 16.89, "4. pow. 13.99% do 16.89%",
ifelse(int_rate3 > 16.89, "5. pow. 16.89%", ""))))))
dataset4 %>% count(dataset4$int_rate4)
class(dataset4$issue_d)
unique(dataset4$issue_d)
dataset4 %>% count(dataset4$issue_d)
dataset4  <- mutate(dataset4, issue_d2 = substr(dataset4$issue_d, 5, 4))
unique(dataset4$issue_d2)
unique(dataset4$issue_d2)
dataset4$issue_d2
unique(dataset4$issue_d)
dataset4  <- mutate(dataset4, issue_d2 = substr(issue_d, 5, 4))
unique(dataset4$issue_d2)
dataset4  <- mutate(dataset4, issue_d2 = substring(issue_d, 5, 4))
dataset4 %>% count(dataset4$int_rate4)
unique(dataset4$issue_d2)
unique(dataset4$issue_d2)
unique(dataset4$issue_d)
dataset4  <- mutate(dataset4, issue_d2 = substring(dataset4$issue_d, 5, 3))
unique(dataset4$issue_d2)
unique(dataset4$issue_d)
dataset4  <- mutate(dataset4, issue_d2 = substring(dataset4$issue_d, 4, 3))
unique(dataset4$issue_d2)
a <- substr("abcdef", 2, 4)
a
dataset4  <- mutate(dataset4, issue_d2 = substring(dataset4$issue_d, 5, 4))
unique(dataset4$issue_d2)
b <- substr(dataset4$issue_d, 5, 4)
b
b <- substring(dataset4$issue_d, 5, 4)
b
b
unique(b)
class(dataset4$issue_d)
sum(is.na(dataset4$issue_d))
dataset4  <- mutate(dataset4, issue_d2 = substring(dataset4$int_rate4, 5, 4))
unique(dataset4$issue_d2)
b <- substr(dataset4$issue_d, 5, 4)
unique(b)
class(dataset4$issue_d)
dataset4  <- mutate(dataset4, issue_d2 = substr(dataset4$issue_d, 5, 4))
unique(dataset4$issue_d2)
dataset4  <- mutate(dataset4, issue_d2 = substr(issue_d, 5, 4))
unique(dataset4$issue_d2)
dataset4  <- mutate(dataset4, issue_d2 = sapply(issue_d, substring, 5, 4))
unique(dataset4$issue_d2)
dataset4  <- mutate(dataset4, issue_d2 = sapply(as.character(issue_d), substring, 5, 4))
unique(dataset4$issue_d2)
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("readxl")
search()
# Wyłączanie notacji naukowej
options(scipen = 999)
getwd()
dataset <- read_excel("LoanStats_DataSet.xlsx")
dataset <- as.tibble(dataset)
dataset
dataset
# do dalszej analizy zostaną wybrane następujące zmienne
dataset2 <- dataset %>% select(id # Unikatowych numer udzielonego kredytu - id wiersza
,loan_status # Status spłacania pożyczki - zmienna zależna
,addr_state # Stan pożyczkobiorcy
,annual_inc # Roczne dochody pożyczkobiorcy
,application_type # Liczba pożyczkobiorców przypisana do pożyczki
,delinq_2yrs # Liczba 30 dniowych opóźnień w spłacie kredytu
,emp_length # Długość zatrudnienia w latach
,emp_title # Nazwa zawodu
,funded_amnt # Kwota udzielonej pożyczki
,home_ownership # Stan własnościowy mieszkania pożyczkobiorcy
,int_rate # Oprocentowanie pożyczki
,issue_d # Data udzielenia pożyczki
,loan_amnt # Kwota pożyczki, ewentualnie zmniejszona p
,purpose # Cel pożyczki
,term # Liczba lat do spłacenia
)
View(dataset2)
class(dataset2$loan_status)
unique(dataset2$loan_status)
dataset2 %>% count(dataset2$loan_status)
count(dataset)
dataset3 <- mutate(dataset3, loan_status2 =
ifelse(loan_status == "Fully Paid" |
loan_status == "Does not meet the credit policy. Status:Fully Paid", "Paid",
ifelse(loan_status == "Charged Off" |
loan_status == "Does not meet the credit policy. Status:Charged Off" |
loan_status == "In Grace Period" |
loan_status == "Late (16-30 days)" |
loan_status == "Late (31-120 days)" |
loan_status == "Default", "Unrepaid", loan_status)))
dataset3 <- dataset2
dataset3 <- mutate(dataset3, loan_status2 =
ifelse(loan_status == "Fully Paid" |
loan_status == "Does not meet the credit policy. Status:Fully Paid", "Paid",
ifelse(loan_status == "Charged Off" |
loan_status == "Does not meet the credit policy. Status:Charged Off" |
loan_status == "In Grace Period" |
loan_status == "Late (16-30 days)" |
loan_status == "Late (31-120 days)" |
loan_status == "Default", "Unrepaid", loan_status)))
dataset4 <- filter(dataset3,  !loan_status2 %in% "Current" & is.na(loan_status2) == FALSE)
dataset4 %>% count(dataset4$loan_status2)
dataset4 %>% count(dataset4$loan_status2)
count(dataset4)
count(dataset4)
table(dataset4$loan_status2)
class(dataset4$annual_inc)
summary(dataset4$annual_inc)
sum(is.na(dataset4$issue_d))
unique(dataset4$issue_d)
dataset4  <- mutate(dataset4, issue_d2 = substr(issue_d, 5, 4))
unique(dataset4$issue_d2)
dataset4  <- mutate(dataset4, issue_d2 = substr(issue_d, 5))
dataset4  <- mutate(dataset4, issue_d2 = substr(issue_d, 5, 4))
unique(dataset4$issue_d2)
a <- substr(dataset4$issue_d, 5, 4)
unique(a)
a <- substr(dataset4$issue_d, 1, 4)
unique(a)
a <- substr(dataset4$issue_d, 4, 4)
unique(a)
a <- substr(dataset4$issue_d, 4, 1)
unique(a)
a <- substr(dataset4$issue_d, 4, 2)
a <- substr(dataset4$issue_d, 4, 2)
unique(a)
a <- substr(dataset4$issue_d, 1, 2)
unique(a)
a <- substr(dataset4$issue_d, 1, 3)
unique(a)
a <- substr(dataset4$issue_d, 1, 4)
unique(a)
a <- substr(dataset4$issue_d, 1, 5)
unique(a)
a <- substr(dataset4$issue_d, 4, 5)
unique(a)
a <- substr(dataset4$issue_d, 5, 5)
unique(a)
a <- substr(dataset4$issue_d, 5, 6)
unique(a)
a <- substr(dataset4$issue_d, 5, 8)
unique(a)
dataset4  <- mutate(dataset4, issue_d2 = substr(issue_d, 5, 8))
unique(dataset4$issue_d2)
dataset4 %>% count(dataset4$issue_d2)
class(dataset4$loan_amnt)
unique(dataset4$loan_amnt)
dataset4  <- mutate(dataset4, loan_amnt2 = as.numeric(loan_amnt))
class(dataset4$loan_amnt2)
dataset4 %>% count(dataset4$loan_amnt2)
dataset4 %>% summarise(sum(loan_amnt2, na.rm = TRUE))
# Średnia
dataset4 %>% summarise(mean(loan_amnt2, na.rm = TRUE))
# Mediana
dataset4 %>% summarise(median(loan_amnt2, na.rm = TRUE))
# Min
dataset4 %>% summarise(min(loan_amnt2, na.rm = TRUE))
# Max
dataset4 %>% summarise(max(loan_amnt2, na.rm = TRUE))
# Kwartyle
summary(dataset4$loan_amnt2)
# Kwartyle
summary(dataset4$loan_amnt2)
# Ustalanie granic końc przedziałów, na podstawie poniższych percentyli
percentyle <- na.omit(dataset4$loan_amnt2)
quantile(percentyle, c(.10, .30, .50, .70, .90))
##########################################################
# Kwartyle
summary(dataset4$loan_amnt2)
##########################################################
# Ustalanie granic końc przedziałów, na podstawie poniższych percentyli
percentyle <- na.omit(dataset4$loan_amnt2)
quantile(percentyle, c(.10, .30, .50, .70, .90))
# Jest 0 wartości NA
sum(is.na(dataset4$loan_amnt2))
dataset4  <- mutate(dataset4, loan_amnt3 =
ifelse(loan_amnt2 >= 500 & loan_amnt2 <= 3000, "1. Od 500$ do 3000$",
ifelse(loan_amnt2 > 3000 & loan_amnt2 <= 6000, "2. pow. 3000$ do 6000$",
ifelse(loan_amnt2 > 6000 & loan_amnt2 <= 9600, "3. pow. 6000$ do 9600$",
ifelse(loan_amnt2 > 9600 & loan_amnt2 <= 13800, "4. pow. 9600$ do 13800$",
ifelse(loan_amnt2 > 13800 & loan_amnt2 <= 21600, "4. pow. 13800$ do 21600$",
ifelse(loan_amnt2 > 21600, "5. pow. 21600$", "")))))))
dataset4 %>% count(dataset4$loan_amnt3)
class(dataset4$purpose)
unique(dataset4$purpose)
dataset4 %>% count(dataset4$purpose)
class(dataset4$term)
unique(dataset4$purpose)
unique(dataset4$term)
dataset4 %>% count(dataset4$term)
load("D:/OneDrive/Studia podyplomowe/Data_Scientist_Kraków/Uczenie Maszynowe - Praca zaliczeniowa/R_Project_Loans_Paid_Predictions/Projekt_Zaliczeniowy_Loans_Predictions/LoanStats_DataSet.xlsx")
# Jest 0 wartości NA
sum(is.na(dataset4$purpose))
# Jest 0 wartości NA
sum(is.na(dataset4$term))
class(dataset2$loan_status)
unique(dataset2$loan_status)
dataset2 %>% count(dataset2$loan_status)
dataset3 <- dataset2
dataset4 %>% count(dataset4$emp_title)
dataset4 %>% order(count(dataset4$emp_title), decreasing=TRUE)
dataset4 %>% order(count(emp_title), decreasing=TRUE)
dataset4 %>% count(dataset4$issue_d2)
dataset4 %>% count(dataset4$issue_d2)
dataset5 <- dataset4 %>% select(
id # Unikatowych numer udzielonego kredytu - id wiersza
,loan_status # Status spłacenia pożyczki - zmienna zależna
,loan_status2 # Status spłacenia pożyczki zmienna zrekodowana
,addr_state # Stan pożyczkobiorcy
,annual_inc # Roczne dochody pożyczkobiorcy
,annual_inc2 # Roczne dochodzy zmienna zrekodowane na 6 kategorii
,application_type # Liczba pożyczkobiorców przypisana do pożyczki
,delinq_2yrs # Liczba 30 dniowych opóźnień w spłacie kredytu
,delinq_2yrs3 # zmienna zrekodowana na 2 kategorie
,emp_length # Długość zatrudnienia w latach, 12 unikatowych wartości
,emp_length2 # dł. zatrud. zmienna zrekodowana na 5 kategorii
,emp_title # Nazwa zawodu
,funded_amnt # Kwota udzielonej pożyczki
,funded_amnt3 # Zmienna zrekodowana na 5 kategorii
,home_ownership # Stan własnościowy mieszkania pożyczkobiorcy
,int_rate # Oprocentowanie pożyczki
,int_rate4 # Zmienna zrekodowana na kategoryczną, 5 wartości
,issue_d # Data udzielenia pożyczki
,issue_d2 # Rok udzielenia pożyczki, 5 kategorii od 2007 do 2011
,loan_amnt # Kwota udzielonej pożyczki
,loan_amnt3 # Kwota udzielonej pożyczki zrekod. na 6 kategorii
,purpose # Cel pożyczki, 13 unikatowych wartości
,term # Liczba lat do spłacenia), 2 unikatowe wartości
dataset5 <- dataset4 %>% select(
id # Unikatowych numer udzielonego kredytu - id wiersza
,loan_status # Status spłacenia pożyczki - zmienna zależna
,loan_status2 # Status spłacenia pożyczki zmienna zrekodowana
,addr_state # Stan pożyczkobiorcy
,annual_inc # Roczne dochody pożyczkobiorcy
,annual_inc2 # Roczne dochodzy zmienna zrekodowane na 6 kategorii
,application_type # Liczba pożyczkobiorców przypisana do pożyczki
,delinq_2yrs # Liczba 30 dniowych opóźnień w spłacie kredytu
,delinq_2yrs3 # zmienna zrekodowana na 2 kategorie
,emp_length # Długość zatrudnienia w latach, 12 unikatowych wartości
,emp_length2 # dł. zatrud. zmienna zrekodowana na 5 kategorii
,emp_title # Nazwa zawodu
,funded_amnt # Kwota udzielonej pożyczki
,funded_amnt3 # Zmienna zrekodowana na 5 kategorii
,home_ownership # Stan własnościowy mieszkania pożyczkobiorcy
,int_rate # Oprocentowanie pożyczki
,int_rate4 # Zmienna zrekodowana na kategoryczną, 5 wartości
,issue_d # Data udzielenia pożyczki
,issue_d2 # Rok udzielenia pożyczki, 5 kategorii od 2007 do 2011
,loan_amnt # Kwota udzielonej pożyczki
,loan_amnt3 # Kwota udzielonej pożyczki zrekod. na 6 kategorii
,purpose # Cel pożyczki, 13 unikatowych wartości
,term # Liczba lat do spłacenia), 2 unikatowe wartości
)
dataset4  <- mutate(dataset4, annual_inc2 =
ifelse(annual_inc >= 0 & annual_inc <= 30000, "Od 0 do 30000",
ifelse(annual_inc > 30000 & annual_inc <= 44340, "Od 30000 do 44340",
ifelse(annual_inc > 44340 & annual_inc <= 58629, "Od 44340 do 58629",
ifelse(annual_inc > 58629 & annual_inc <= 75324, "Od 58629 do 75324",
ifelse(annual_inc > 75324 & annual_inc <= 116004, "Od 75324 do 116004",
ifelse(annual_inc > 116004, "Większe niż 116004", annual_inc)))))))
dataset4 %>% count(dataset4$annual_inc2)
dataset5 <- dataset4 %>% select(
id # Unikatowych numer udzielonego kredytu - id wiersza
,loan_status # Status spłacenia pożyczki - zmienna zależna
,loan_status2 # Status spłacenia pożyczki zmienna zrekodowana
,addr_state # Stan pożyczkobiorcy
,annual_inc # Roczne dochody pożyczkobiorcy
,annual_inc2 # Roczne dochodzy zmienna zrekodowane na 6 kategorii
,application_type # Liczba pożyczkobiorców przypisana do pożyczki
,delinq_2yrs # Liczba 30 dniowych opóźnień w spłacie kredytu
,delinq_2yrs3 # zmienna zrekodowana na 2 kategorie
,emp_length # Długość zatrudnienia w latach, 12 unikatowych wartości
,emp_length2 # dł. zatrud. zmienna zrekodowana na 5 kategorii
,emp_title # Nazwa zawodu
,funded_amnt # Kwota udzielonej pożyczki
,funded_amnt3 # Zmienna zrekodowana na 5 kategorii
,home_ownership # Stan własnościowy mieszkania pożyczkobiorcy
,int_rate # Oprocentowanie pożyczki
,int_rate4 # Zmienna zrekodowana na kategoryczną, 5 wartości
,issue_d # Data udzielenia pożyczki
,issue_d2 # Rok udzielenia pożyczki, 5 kategorii od 2007 do 2011
,loan_amnt # Kwota udzielonej pożyczki
,loan_amnt3 # Kwota udzielonej pożyczki zrekod. na 6 kategorii
,purpose # Cel pożyczki, 13 unikatowych wartości
,term # Liczba lat do spłacenia), 2 unikatowe wartości
)
dataset4  <- mutate(dataset4, delinq_2yrs2 = as.numeric(delinq_2yrs))
dataset4 %>% count(dataset4$delinq_2yrs2)
dataset4  <- mutate(dataset4, delinq_2yrs3 =
ifelse(delinq_2yrs2 == 0, "Brak opóżnień",
ifelse(is.na(delinq_2yrs2), "Brak opóżnień", "Były opóźnienia")))
dataset4  <- dataset4 %>% mutate(delinq_2yrs3 = coalesce(delinq_2yrs3, "Brak opóżnień"))
dataset4 %>% count(dataset4$delinq_2yrs3)
dataset5 <- dataset4 %>% select(
id # Unikatowych numer udzielonego kredytu - id wiersza
,loan_status # Status spłacenia pożyczki - zmienna zależna
,loan_status2 # Status spłacenia pożyczki zmienna zrekodowana
,addr_state # Stan pożyczkobiorcy
,annual_inc # Roczne dochody pożyczkobiorcy
,annual_inc2 # Roczne dochodzy zmienna zrekodowane na 6 kategorii
,application_type # Liczba pożyczkobiorców przypisana do pożyczki
,delinq_2yrs # Liczba 30 dniowych opóźnień w spłacie kredytu
,delinq_2yrs3 # zmienna zrekodowana na 2 kategorie
,emp_length # Długość zatrudnienia w latach, 12 unikatowych wartości
,emp_length2 # dł. zatrud. zmienna zrekodowana na 5 kategorii
,emp_title # Nazwa zawodu
,funded_amnt # Kwota udzielonej pożyczki
,funded_amnt3 # Zmienna zrekodowana na 5 kategorii
,home_ownership # Stan własnościowy mieszkania pożyczkobiorcy
,int_rate # Oprocentowanie pożyczki
,int_rate4 # Zmienna zrekodowana na kategoryczną, 5 wartości
,issue_d # Data udzielenia pożyczki
,issue_d2 # Rok udzielenia pożyczki, 5 kategorii od 2007 do 2011
,loan_amnt # Kwota udzielonej pożyczki
,loan_amnt3 # Kwota udzielonej pożyczki zrekod. na 6 kategorii
,purpose # Cel pożyczki, 13 unikatowych wartości
,term # Liczba lat do spłacenia), 2 unikatowe wartości
)
